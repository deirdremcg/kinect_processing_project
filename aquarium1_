import org.openkinect.freenect.*;
import org.openkinect.freenect2.*;
import org.openkinect.processing.*;
import org.openkinect.tests.*;

Kinect kinect;

float angle = 0.0;
float offset = 150; 
float scalar = 50; 
float speed =.04; 

//variables of where fish are located
float xLoc = -100;
float yLoc; 

boolean gLeft, gRight;

void setup() {
  size(612, 424);
  kinect = new Kinect(this);
  kinect.initDepth();
  kinect.enableColorDepth(true);
  //smooth();
}

void draw() {
  PImage img = kinect.getDepthImage();
  image(img, 0, 0);
  
  //background(0,200,200);
  randomSeed(0);
  
 // int skip = 4; 
  //for (int x = 0; x < img.width; x+=skip) {
   //for (int  y = 0; y < img.height; y+=skip) {
      //int index = x + y * img.width;
      //float b = brightness(img.pixels[index]);
      //float z = map(b, 0, 255, 10, -10);
      //fill(random(25), random(25), random(255));
      //color(#d825db);
      //pushMatrix();
      //translate(x,y,z);
      //ellipse(x,y,skip,skip);
      //noStroke();
      //popMatrix();
      
  //seting my variables to implement 
  //on my different fish and put it on 
  //my custome function for the fish
  float y1 = offset + sin(angle) * scalar;
  float y2 = offset + sin(angle + .4) * scalar;
  float y3 = offset + sin(angle + .8) * scalar;
  float y4 = offset + sin(angle + 1.2) * scalar;
  
  //calling my fish into the draw function 
  fish(0, y1);
  fish(100, y2);
  fish(200, y3);
  fish(300, y4);
  fish(50, y1+50);
  fish(150, y2+50);
  fish(250, y3+50);
  fish(350, y4+50);
  
  //this sets the angle for speed -look like fish are going up and down
  angle += speed;     
    }

  //set my fish to go left and right with booleans
  void fish(float x, float y){
  
  //if it equals true it draws the corrisponding code
  if (gLeft==true) {
  
    pushMatrix();
    xLoc++;
    translate(x,y);
    //strokeWeight(1);
    noStroke();
    //fin
    fill(random(25), random(207), random(255));
    triangle(xLoc, yLoc, xLoc-40, yLoc+15, xLoc-40, yLoc-10);
    //fishbody
    ellipse (xLoc, yLoc, 50, 20);
    //fisheye
    fill(255); 
    ellipse (xLoc+15, yLoc, 5, 5);
    fill(0);
    ellipse (xLoc+15, yLoc, 5, 5);
    smooth();
    popMatrix(); 
  }
  // if this equals true then it also draws the code
  if (gRight==true) {
    pushMatrix();
    xLoc--;
    translate(x,y); 
    strokeWeight(1);
    //fin
    fill(random(25), random(207), random(255));
    triangle(xLoc, yLoc, xLoc+40, yLoc-15, xLoc+40, yLoc+10);
    //fishbody
    ellipse (xLoc, yLoc, 50, 20);
    //fisheye
    fill(255); 
    ellipse (xLoc-15, yLoc, 5, 5);
    fill(0);
    ellipse (xLoc-15, yLoc, 5, 5);
    popMatrix(); 
  }
  //below are the ifs for when the fish get to a certain distance 
  if (xLoc <= -100) {
    gRight = false;
    gLeft = true;
  }

  if (xLoc >= 800) {
    gLeft = false;
    gRight = true;
  }
  //changes how fast the fish look like they are swimming 
  if (mousePressed){
    speed = .1;
    
  } else {
     speed = .05;
     
  }
  }
